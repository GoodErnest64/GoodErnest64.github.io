{"version":3,"file":"component---src-pages-projects-index-js-93b51a828aa9bf26995d.js","mappings":"2LAIA,MAAMA,EAAS,CACbC,IAAK,oDACLC,OAAQ,iDACRC,KAAM,8CACNC,OAAQ,uDACRC,SAAU,iDACVC,WAAY,wDAOC,SAASC,EAAKC,GAAQ,IAADC,EAClC,OACEC,EAAAA,cAAA,WAASC,UAAU,4EAA4EC,IAAKJ,EAAMK,IACxGH,EAAAA,cAAA,WACEA,EAAAA,cAACI,EAAAA,GAAI,CAACC,GAAI,IAAIP,EAAMQ,QAAQR,EAAMS,QAChCP,EAAAA,cAACQ,EAAAA,EAAW,CACVP,UAAU,eACVQ,OAAOC,EAAAA,EAAAA,GAASZ,EAAMa,YACtBC,IAAKd,EAAMe,kBAGfb,EAAAA,cAAA,MAAIC,UAAU,qGACZD,EAAAA,cAACI,EAAAA,GAAI,CAACC,GAAI,IAAIP,EAAMQ,QAAQR,EAAMS,QAC/BT,EAAMgB,QAGXd,EAAAA,cAAA,OAAKC,UAAU,gEACbD,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,OAAKe,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKC,OAAO,eAAelB,UAAU,UACxHD,EAAAA,cAAA,QAAMoB,cAAc,QAAQC,eAAe,QAAQC,EAAE,ijBAEvDtB,EAAAA,cAAA,SAAIF,EAAMyB,OAEZvB,EAAAA,cAAA,KAAGC,UAAU,wCAAwCH,EAAM0B,WAG/DxB,EAAAA,cAAA,OAAKC,UAAU,mHACbD,EAAAA,cAACI,EAAAA,GAAI,CAACC,GAAI,IAAIP,EAAMQ,QAAQR,EAAMS,OAAQkB,MAAM,kPAAiP,YAE/RzB,EAAAA,cAAA,OAAKyB,MAAM,kCAAkC,cAAY,OAAOV,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,aACrHjB,EAAAA,cAAA,QAAMmB,OAAO,eAAe,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAIG,EAAE,8BAGlGtB,EAAAA,cAAA,MAAIC,UAAU,8BACD,QAD6BF,EACvCD,EAAM4B,YAAI,IAAA3B,OAAA,EAAVA,EAAY4B,MAAM,KAAKC,KAAIC,IAC1B7B,SAAAA,cAAA,MAAIC,UAAW,sDAAwDX,EAAOuC,GAAO,oBAvC9EC,EAuC4GD,GAtCpH,GAAGE,cAAgBD,EAAEE,UAAU,IAD1C,IAAmBF,CAwCR,MAKX,C,sDCvCA,UAhBYG,IAAgB,IAAf,MAAEnB,GAAOmB,EACpB,MAAMC,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACEnC,EAAAA,cAAA,aAAQc,EAAM,MAAIoB,EAAKE,KAAKC,aAAavB,MAAc,C,6GCT3D,MAmDawB,EAAOA,IAAMtC,EAAAA,cAACuC,EAAAA,QAAG,CAACzB,MAAM,gBAErC,UArDiBmB,IAAe,IAAd,KAAEC,GAAMD,EACxB,OACEjC,EAAAA,cAACwC,EAAAA,QAAM,KACLxC,EAAAA,cAAA,OAAKC,UAAU,oDAEXiC,EAAKO,OAAOC,MAAMd,KAAIe,GACpB3C,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAACH,EAAAA,QAAI,CACHM,GAAIwC,EAAKxC,GACTG,KAAK,WACLC,KAAMoC,EAAKC,YAAYrC,KACvBO,MAAO6B,EAAKC,YAAY9B,MACxBS,KAAMoB,EAAKC,YAAYrB,KACvBC,QAASmB,EAAKnB,QACdE,KAAMiB,EAAKC,YAAYlB,KACvBf,WAAYgC,EAAKC,YAAYjC,WAC7BE,eAAgB8B,EAAKC,YAAY/B,qBAMpC,C","sources":["webpack://blog/./src/pages/components/card.js","webpack://blog/./src/pages/components/seo.js","webpack://blog/./src/pages/projects/index.js"],"sourcesContent":["import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\r\n\r\nconst Colors = {\r\n  web: \"bg-green-500/75 ring-green-900 hover:bg-green-700\",\r\n  python: \"bg-blue-500/75 ring-blue-900 hover:bg-blue-700\",\r\n  rust: \"bg-red-500/75 ring-red-900 hover:bg-red-700\",\r\n  gatsby: \"bg-purple-500/75 ring-purple-900 hover:bg-purple-700\",\r\n  featured: \"bg-gray-500/75 ring-gray-900 hover:bg-gray-700\",\r\n  javascript: \"bg-yellow-300/75 ring-yellow-700 hover:bg-yellow-600\"\r\n}\r\n\r\nfunction captalize(s) {\r\n  return s[0].toUpperCase() + s.substring(1);\r\n}\r\n\r\nexport default function Card(props) {\r\n  return (\r\n    <article className=\"flex flex-col justify-between my-2 ring-1 h-full ring-gray-600 rounded-xl\" key={props.id}>\r\n      <div>\r\n        <Link to={`/${props.link}/${props.slug}`}>\r\n          <GatsbyImage\r\n            className=\"rounded-t-xl\"\r\n            image={getImage(props.hero_image)}\r\n            alt={props.hero_image_alt}\r\n          />\r\n        </Link>\r\n        <h2 className=\"md:text-4xl text-2xl px-3 pt-2 transition-all hover:text-sky-400 duration-300 text-wrap font-bold\">\r\n          <Link to={`/${props.link}/${props.slug}`}>\r\n            {props.title}\r\n          </Link>\r\n        </h2>\r\n        <div className=\"p-3 md:text-xl rounded-b-xl text-gray-700 dark:text-gray-400\">\r\n          <div className=\"flex\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"size-6\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z\" />\r\n            </svg>\r\n            <p>{props.date}</p>\r\n          </div>\r\n          <p className=\"p-2 text-gray-700 dark:text-gray-400\">{props.excerpt}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-col gap-1 md:gap-0 md:flex-row md:justify-between justify-start items-start md:items-center px-3 pb-3\">\r\n        <Link to={`/${props.link}/${props.slug}`} class=\"inline-flex items-center mt-2 px-3 py-2 text-sm font-bold text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">\r\n          Read more\r\n          <svg class=\"rtl:rotate-180 w-3.5 h-3.5 ms-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 10\">\r\n            <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M1 5h12m0 0L9 1m4 4L9 9\" />\r\n          </svg>\r\n        </Link>\r\n        <ul className=\"flex md:self-auto self-end\">\r\n          {props.tags?.split(\" \").map(tag => (\r\n            <li className={\"cursor-pointer text-white rounded-full font-normal \" + Colors[tag] + \" ring-2 m-1 p-2\"}>{captalize(tag)}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </article>\r\n  );\r\n}","import * as React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Seo = ({ title }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <title>{title} | {data.site.siteMetadata.title}</title>\r\n  )\r\n}\r\n\r\nexport default Seo","import * as React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport Seo from '../components/seo'\r\nimport Card from '../components/card'\r\n\r\nconst BlogPage = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <div className=\"flex flex-col w-full justify-center items-center\">\r\n        {\r\n          data.allMdx.nodes.map(node => (\r\n            <div className='md:w-1/2 w-11/12'>\r\n              <Card\r\n                id={node.id}\r\n                link=\"projects\"\r\n                slug={node.frontmatter.slug}\r\n                title={node.frontmatter.title}\r\n                date={node.frontmatter.date}\r\n                excerpt={node.excerpt}\r\n                tags={node.frontmatter.tags}\r\n                hero_image={node.frontmatter.hero_image}\r\n                hero_image_alt={node.frontmatter.hero_image_alt}\r\n              />\r\n            </div>\r\n          ))\r\n        }\r\n      </div >\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n  allMdx(\r\n    sort: {frontmatter: {date: DESC}}\r\n    filter: {frontmatter: {type: {eq: \"projects\"}}}\r\n  ) {\r\n    nodes {\r\n      frontmatter {\r\n        date(formatString: \"MMMM D, YYYY\")\r\n        title\r\n        slug\r\n        tags\r\n        hero_image {\r\n          childImageSharp {\r\n            gatsbyImageData\r\n          }\r\n        }\r\n      }\r\n      id\r\n      excerpt\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const Head = () => <Seo title=\"My Projects\" />\r\n\r\nexport default BlogPage"],"names":["Colors","web","python","rust","gatsby","featured","javascript","Card","props","_props$tags","React","className","key","id","Link","to","link","slug","GatsbyImage","image","getImage","hero_image","alt","hero_image_alt","title","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","date","excerpt","class","tags","split","map","tag","s","toUpperCase","substring","_ref","data","useStaticQuery","site","siteMetadata","Head","Seo","Layout","allMdx","nodes","node","frontmatter"],"sourceRoot":""}